version: "3"

services:
  server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    container_name: server
    command: npm run start:server
    restart: "no"
    volumes:
      - ./packages/server:/root/app/packages/server:ro
      - ./packages/shared:/root/app/packages/shared:ro
    ports:
      - 8001:8000
    env_file:
      - ./environment/.env.default
      - ./environment/.env.server
    networks:
      - sandbox-network
    depends_on:
      - rabbitmq
      - mongodb

  mongodb:
    image: 'bitnami/mongodb:latest'
    container_name: mongodb
    env_file:
      - ./environment/.env.default
    restart: "no"
    ports:
      - 27019:27017
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - MONGODB_ROOT_USER=${MONGODB_ROOT_USER}
      - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
    volumes:
      - ./data/mongodb:/bitnami/mongodb
    networks:
      - sandbox-network

  rabbitmq:
    image: bitnami/rabbitmq:3.11.9
    restart: "no"
    container_name: rabbitmq
    environment:
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    ports:
      - 15673:15672
    networks:
      - sandbox-network

networks:
  sandbox-network:
    driver: bridge